# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "usbhid" "rtsx_pci_sdmmc"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/da5d143a-d69a-43bd-8df8-2c220e832edd";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-a22f84c8-20e0-44c1-a666-f6991390be4a" = {
    device = "/dev/disk/by-uuid/a22f84c8-20e0-44c1-a666-f6991390be4a";
    allowDiscards = true;
    bypassWorkqueues = true;
  };

  fileSystems."/nix/store" = {
    device = "/nix/store";
    fsType = "none";
    options = ["bind"];
  };

  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/0725-C3F7";
    fsType = "vfat";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/0109b49a-dc49-4c46-9dfb-5e339b0b19ae";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
